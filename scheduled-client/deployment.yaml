# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: data-mef-pv
# spec:
#   capacity:
#     storage: 10Gi
#   volumeMode: Filesystem
#   storageClassName: longhorn
#   accessModes:
#     - ReadWriteOnce
# ---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-mef-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: longhorn
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scheduled-client-deployment
  namespace: tm-gla
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scheduled-client
  template:
    metadata:
      labels:
        app: scheduled-client
    spec:
      containers:
        - name: scheduled-client
          image: scheduled-client:latest
          resources:
            requests:
              memory: "2Gi"
              cpu: 1
            limits:
              memory: "2Gi"
              cpu: 1
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_KAFKA_ENABLED
              value: "true"
            - name: SPRING_KAFKA_PRODUCER_BOOTSTRAP-SERVERS
              value: kafka.kafka.svc.cluster.local:9092
            - name: SPRING_KAFKA_PRODUCER_TOPIC
              value: test
            - name: SPRING_SERVLET_MULTIPART_MAX-FILE-SIZE
              value: "500MB"
            - name: PATH_TIMESTAMPS
              value: "/MEF/file/timbrature"
            - name: PATH_TIMESTAMPS_TO-BE-ELABORATED
              value: "/MEF/file/to-be-elaborated"
            - name: FIXEDRATE_WATCHING_FOLDER_SECONDS
              value: "30"
          volumeMounts:
            - name: data-mef
              mountPath: /MEF/file/
      volumes:
        - name: data-mef
          persistentVolumeClaim:
            claimName: data-mef-pvc
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: scheduled-client-entrypoint
  namespace: tm-gla
spec:
  type: NodePort
  selector:
    app: scheduled-client
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30001
      protocol: TCP
